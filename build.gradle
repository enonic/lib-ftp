plugins {
	id 'java' // Needed for libs building without xp.apps plugin
	id 'maven' // Needed for uploadArchives to work locally
	id 'com.enonic.defaults' version '1.0.3'
	id "com.moowork.node" version "1.2.0"
	id "com.moowork.gulp" version "1.2.0"
}


dependencies {

    // Enonic core libs
    compile "com.enonic.xp:lib-io:${xpVersion}"

    // Enonic libs
    compile "com.enonic.lib:util:1.1.3"

    // Other libs
    compile 'commons-net:commons-net:3.3'

} // dependencies


repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'http://repo.enonic.com/public'
    }
}

//──────────────────────────────────────────────────────────────────────────────
// Gulp
//──────────────────────────────────────────────────────────────────────────────
task installGulp(overwrite: true) {} // Skip gulp install...


task gulp_build(type: GulpTask, dependsOn: 'installGulp') {
    description = 'Build for production using gulp'
    args = ["--color", "--gulpfile", "gulpfile.babel.js", "prod"]
}


// TODO: Does gulp watch block for gradle continous?
task gulp_watch(type: GulpTask, dependsOn: 'installGulp') {
    description = 'Build for development and watch using gulp'
    args = ["--color", "--gulpfile", "gulpfile.babel.js", "watch"]
}

gulp {
    // Set the directory where gulpfile.js should be found
    workDir = file("${project.projectDir}")
    // Whether colors should output on the terminal
    colors = true
}

// processes your package.json before running gulp build
//gulp_build.dependsOn 'npmInstall'
//gulp_build.dependsOn yarnInstall

// runs "gulp build" as part of your gradle build
build.dependsOn 'gulp_build'
build.mustRunAfter 'gulp_build'

//──────────────────────────────────────────────────────────────────────────────
// Let gulp handle everything except compiling java
//──────────────────────────────────────────────────────────────────────────────

tasks.withType(Copy) {
  includeEmptyDirs = false
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            exclude '*'
        }
    }
}
